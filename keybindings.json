// "command": "workbench.action.toggleMaximizedPanel", // need work
// "command": "workbench.action.toggleMaximizeEditorGroup",
// "command": "workbench.action.toggleZenMode",
// "command": "workbench.action.increaseViewSize",
// Navigation
[
  {
    "command": "workbench.action.navigateLeft",
    "key": "ctrl-h"
  },
  {
    "command": "workbench.action.navigateRight",
    "key": "ctrl-l"
  },
  {
    "command": "workbench.action.navigateUp",
    "key": "ctrl-k"
  },
  {
    "command": "workbench.action.navigateDown",
    "key": "ctrl-j"
  },
  {
    "command": "workbench.action.showAllEditors",
    "key": "space ,",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },
  {
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.files.action.focusFilesExplorer"
      ]
    },
    "command": "runCommands",
    "key": "space e",
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus) && !sideBarFocus"
  },
  {
    "args": {
      "commands": [
        "workbench.action.toggleSidebarVisibility",
        "workbench.action.focusActiveEditorGroup"
      ]
    },
    "command": "runCommands",
    "key": "space e",
    "when": "sideBarFocus && !inputFocus"
  },
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "space e",
    "when": "vim.mode == 'Normal' && editorTextFocus && foldersViewVisible"
  },
  {
    "command": "workbench.action.nextEditorInGroup",
    "key": "tab",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "workbench.action.previousEditorInGroup",
    "key": "shift-tab",
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },
  {
    "command": "workbench.action.quickOpen",
    "key": "space space", // quick open
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  },

  // Editor Management (including file operations)
  {
    "command": "workbench.action.toggleFullScreen",
    "key": "space s a",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.closeActiveEditor",
    "key": "space w", // exit tab
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.closeAllEditors",
    "key": "space q", // exit all tabs
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.moveEditorToLeftGroup",
    "key": "space s h",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.moveEditorToBelowGroup",
    "key": "space s j",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.moveEditorToAboveGroup",
    "key": "space s k",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "args": {
      "commands": ["workbench.action.moveEditorToRightGroup"]
    },
    "command": "runCommands",
    "key": "space s l",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.moveEditorToNewWindow",
    "key": "space s n",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.terminal.moveToEditor",
    "key": "space s t",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.terminal.toggleTerminal",
    "key": "space t s",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.terminal.new",
    "key": "space t n",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.terminal.kill",
    "key": "space t w",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.terminal.killAll",
    "key": "space t q",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.terminal.focusAtIndex1",
    "key": "space t 1",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.terminal.focusAtIndex2",
    "key": "space t 2",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.terminal.focusAtIndex3",
    "key": "space t 3",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.terminal.focus",
    "key": "space t t",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.terminal.resizePaneUp",
    "key": "space t k",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.terminal.resizePaneDown",
    "key": "space t j",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.terminal.fontZoomIn",
    "key": "space t =",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.terminal.fontZoomOut",
    "key": "space t -",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.terminal.moveToEditor",
    "key": "ctrl+o",
    "when": "terminal.active"
  },
  {
    "command": "workbench.action.terminal.moveToTerminalPanel",
    "key": "ctrl+i",
    "when": "terminal.active"
  },
  {
    "command": "workbench.action.terminal.moveIntoNewWindow",
    "key": "space t o",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "workbench.action.closePanel",
    "key": "space t h",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },

  // Editor Actions
  {
    "command": "editor.action.clipboardCopyAction",
    "key": "space m",
    "when": "vim.mode == 'Visual'"
  },
  {
    "command": "editor.action.moveLinesDownAction",
    "key": "shift-j",
    "when": "vim.mode == 'VisualLine' && editorTextFocus"
  },
  {
    "command": "editor.action.moveLinesUpAction",
    "key": "shift-k",
    "when": "vim.mode == 'VisualLine' && editorTextFocus"
  },
  {
    "command": "editor.action.showHover",
    "key": "shift-h", // show hover
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.codeAction",
    "key": "space a", // actions
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.rename",
    "key": "space r r", // reference rename
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.triggerSuggest",
    "key": "space f", // suggestions
    "when": "vim.mode == 'Normal' && editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "command": "editor.action.commentLine",
    "key": "space c", // code comment
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual' || vim.mode == 'VisualLine') && editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "command": "editor.action.goToReferences",
    "key": "space r g", // go references
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.revealDefinition",
    "key": "space d", // go definition
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "args": {
      "commands": [
        "editor.action.revealDefinitionAside", // Open definition in right side editor
        "workbench.action.focusSecondEditorGroup", // Move focus to the right editor
        "explorer.openAndPassFocus" // Pass focus to the explorer if needed
      ]
    },
    "command": "runCommands",
    "key": "space s d",
    "when": "vim.mode == 'Normal' && editorTextFocus"
  },
  {
    "command": "editor.action.addSelectionToNextFindMatch",
    "key": "space n", // find next match
    "when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
  },

  // File Explorer
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.copy",
    "key": "c",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.paste",
    "key": "p",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "filesExplorer.cut",
    "key": "x",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.newFile",
    "key": "a",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.newFolder",
    "key": "shift-a",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.openToSide",
    "key": "s",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "args": {
      "commands": [
        "workbench.action.splitEditorDown",
        "explorer.openAndPassFocus",
        "workbench.action.closeOtherEditors"
      ]
    },
    "command": "runCommands",
    "key": "shift-s",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "command": "explorer.openAndPassFocus",
    "key": "enter",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus"
  },
  {
    "command": "list.toggleExpand",
    "key": "enter",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && explorerResourceIsFolder && !inputFocus"
  },
  {
    "command": "workbench.action.closePanel",
    "key": "ctrl+shift+u ctrl+shift+y"
  },
  {
    "command": "workbench.action.findInFiles",
    "key": "space s g", // search global
    "when": "vim.mode == 'Normal' && (editorTextFocus || !inputFocus)"
  }
]
